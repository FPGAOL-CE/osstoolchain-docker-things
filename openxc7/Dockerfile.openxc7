FROM ubuntu:20.04

ENV ALLOW_ROOT 1

ENV TZ=Asia/Seoul
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone


RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y ca-certificates wget sudo build-essential clang bison flex cmake git libreadline-dev gawk gfortran tcl-dev libffi-dev pkg-config python3 python3-dev libpython3-dev python3-pip python3-yaml python3-venv pypy3 libboost-all-dev zlib1g-dev libeigen3-dev curl gnutls-bin openssl --no-install-recommends

RUN cd / && \
	wget https://github.com/YosysHQ/yosys/archive/refs/tags/yosys-0.17.tar.gz && \
	tar xf yosys-0.17.tar.gz && \
	mv yosys-yosys-0.17 yosys && \
	cd yosys && \
	make config-gcc && \
	make -j8 && \
	make install

RUN cd / && \
	git clone --depth=1 https://github.com/openXC7/nextpnr-xilinx.git && \
	cd nextpnr-xilinx && \
	git submodule update --init --recursive && \
	cmake -DARCH=xilinx -DBUILD_GUI=0 -DCMAKE_INSTALL_PREFIX=/usr/local && \
	make -j && \
	make install && \
	cp bbasm /usr/local/bin/ && \
	mkdir /chipdb

RUN cd / && \
	git clone https://github.com/openXC7/prjxray.git && \
	cd prjxray && \
	git submodule update --init --recursive && \
	make build && \
	make install && \
	make env

#RUN cd / && \
	#git clone https://github.com/YosysHQ/yosys && \
	#cd yosys && \
	#make config-gcc && \
	#make -j8 && \
	#make install

COPY ./docker-entrypoint.sh /
ENTRYPOINT ["/docker-entrypoint.sh"]

CMD ["/bin/bash"]
